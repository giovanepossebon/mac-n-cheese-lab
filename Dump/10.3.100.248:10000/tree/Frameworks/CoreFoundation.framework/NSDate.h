/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

@interface NSDate : NSObject <AFSecurityDigestibleChunksProviding, CKRecordValue, NSCopying, NSSecureCoding, _DKDeduping>

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct { unsigned short x1; unsigned short x2; } mdltsu_DOSTime;
@property (readonly) Class superclass;
@property (readonly) double timeIntervalSinceReferenceDate;

// Image: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)date;
+ (id)dateWithDate:(id)arg1;
+ (id)dateWithString:(id)arg1;
+ (id)dateWithTimeInterval:(double)arg1 sinceDate:(id)arg2;
+ (id)dateWithTimeIntervalSince1970:(double)arg1;
+ (id)dateWithTimeIntervalSinceNow:(double)arg1;
+ (id)dateWithTimeIntervalSinceReferenceDate:(double)arg1;
+ (id)distantFuture;
+ (id)distantPast;
+ (bool)supportsSecureCoding;
+ (double)timeIntervalSinceReferenceDate;

- (unsigned long long)_cfTypeID;
- (id)addTimeInterval:(double)arg1;
- (long long)compare:(id)arg1;
- (long long)compare:(id)arg1 toUnitGranularity:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateByAddingTimeInterval:(double)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (id)earlierDate:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithDate:(id)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithTimeInterval:(double)arg1 sinceDate:(id)arg2;
- (id)initWithTimeIntervalSince1970:(double)arg1;
- (id)initWithTimeIntervalSinceNow:(double)arg1;
- (id)initWithTimeIntervalSinceReferenceDate:(double)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqual:(id)arg1 toUnitGranularity:(unsigned long long)arg2;
- (bool)isEqualToDate:(id)arg1;
- (bool)isInSameDayAsDate:(id)arg1;
- (bool)isInToday;
- (bool)isInTomorrow;
- (bool)isInYesterday;
- (bool)isNSDate__;
- (id)laterDate:(id)arg1;
- (double)timeIntervalSince1970;
- (double)timeIntervalSinceDate:(id)arg1;
- (double)timeIntervalSinceNow;
- (double)timeIntervalSinceReferenceDate;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)dateWithNaturalLanguageString:(id)arg1;
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
+ (id)dateWithNaturalLanguageString:(id)arg1 locale:(id)arg2;

- (id)_web_RFC1123DateString;
- (long long)_web_compareDay:(id)arg1;
- (bool)_web_isToday;
- (Class)classForCoder;
- (id)dateWithCalendarFormat:(id)arg1 timeZone:(id)arg2;
- (id)descriptionWithCalendarFormat:(id)arg1 timeZone:(id)arg2 locale:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;

// Image: /System/Library/Frameworks/Intents.framework/Intents

- (id)_intents_readableDescriptionForLanguage:(id)arg1;

// Image: /System/Library/Frameworks/ModelIO.framework/ModelIO

- (struct { unsigned short x1; unsigned short x2; })mdltsu_DOSTime;
- (id)mdltsu_fullFormattedDateWithPeriod;
- (id)mdltsu_initWithDOSTime:(struct { unsigned short x1; unsigned short x2; })arg1;
- (bool)mdltsu_isEqualToDate:(id)arg1;
- (id)mdltsu_relativeAnnotationStringForEarlierDate:(id)arg1;
- (id)mdltsu_relativeAnnotationStringForEarlierDate:(id)arg1 withDateFormatter:(id)arg2;
- (id)mdltsu_relativeAnnotationStringForEarlierDate:(id)arg1 withDateFormatter:(id)arg2 shortAsPossible:(bool)arg3;
- (id)p_rule1To23HoursAgo:(long long)arg1;
- (id)p_rule1To59MinutesAgo:(long long)arg1;
- (id)p_ruleForOverAWeekAgoForDate:(id)arg1 withDateFormatter:(id)arg2;
- (id)p_ruleForOverAYearAgoForDate:(id)arg1 withDateFormatter:(id)arg2;
- (id)p_ruleForUpToSevenDaysAgoAndNotYesterdayForDate:(id)arg1 withDateFormatter:(id)arg2;
- (id)p_ruleForYesterday:(id)arg1 withDateFormatter:(id)arg2;
- (id)p_ruleForYesterdayShortAsPossible:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary

+ (id)dateForDaysSince1970:(int)arg1;
+ (int)daysSince1970;

- (int)daysSince1970;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

- (bool)_af_isSameDayAsDate:(id)arg1;
- (void)af_enumerateDigestibleChunksWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (bool)af_isToday;
- (bool)af_isTomorrow;

// Image: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit

- (id)ak_serverFriendlyString;

// Image: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard

- (id)bs_dateByAddingDays:(long long)arg1;
- (bool)isAfterDate:(id)arg1;
- (bool)isBeforeDate:(id)arg1;

// Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet

- (id)cd_dateWithCeilingForAlignment:(double)arg1;
- (id)cd_dateWithCeilingForAlignment:(double)arg1 withOffset:(double)arg2 inTimeZone:(id)arg3;
- (id)cd_dateWithFloorForAlignment:(double)arg1;
- (id)cd_dateWithFloorForAlignment:(double)arg1 withOffset:(double)arg2 inTimeZone:(id)arg3;
- (id)dedup;
- (id)dk_localtimeString;
- (id)floorDateWithTotalSlotsInDay:(int)arg1;
- (int)slotFromMidnightWithTotalSlotsInDay:(int)arg1;
- (double)timeSinceMidnight:(id*)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

+ (id)_geo_calendar;
+ (id)geo_dateWithJulianDay:(double)arg1;
+ (id)geo_dateWithJulianEphemerisDay:(double)arg1;

- (double)geo_hoursAndMinutes;
- (double)geo_julianDay;
- (double)geo_julianEphemerisDay;

// Image: /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities

+ (id)__im_dateWithCurrentServerTime;
+ (id)__im_dateWithNanosecondTimeIntervalSinceReferenceDate:(long long)arg1;
+ (bool)useCourierTime;

- (long long)__im_nanosecondTimeInterval;
- (long long)differenceFromDate:(id)arg1;
- (long long)hoursDifferenceFromDate:(id)arg1;
- (bool)isArchivable_im;
- (bool)isToday;
- (long long)minutesDifferenceFromDate:(id)arg1;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation

- (bool)isWholeHour;

// Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices

- (id)copyXPCEncoding;
- (id)initWithXPCEncoding:(id)arg1;

@end
